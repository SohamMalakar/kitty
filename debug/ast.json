{
    "type": "Program",
    "statements": [
        {
            "FunctionStatement": {
                "type": "FunctionStatement",
                "name": {
                    "type": "IdentifierLiteral",
                    "value": "func"
                },
                "return_type": "int",
                "parameters": [],
                "body": [
                    {
                        "type": "VarStatement",
                        "name": {
                            "type": "IdentifierLiteral",
                            "value": "a"
                        },
                        "value": {
                            "type": "IntegerLiteral",
                            "value": 0
                        },
                        "value_type": "int"
                    },
                    {
                        "type": "IfStatement",
                        "condition": {
                            "type": "InfixExpression",
                            "left_node": {
                                "type": "IntegerLiteral",
                                "value": 1
                            },
                            "operator": ">",
                            "right_node": {
                                "type": "IntegerLiteral",
                                "value": 2
                            }
                        },
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expr": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                        "type": "FloatLiteral",
                                        "value": 9.7
                                    },
                                    "operator": "+",
                                    "right_node": {
                                        "type": "FloatLiteral",
                                        "value": 0.5
                                    }
                                }
                            },
                            {
                                "type": "AssignStatement",
                                "ident": {
                                    "type": "IdentifierLiteral",
                                    "value": "a"
                                },
                                "right_value": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                        "type": "InfixExpression",
                                        "left_node": {
                                            "type": "IntegerLiteral",
                                            "value": 10
                                        },
                                        "operator": "+",
                                        "right_node": {
                                            "type": "IntegerLiteral",
                                            "value": 7
                                        }
                                    },
                                    "operator": "+",
                                    "right_node": {
                                        "type": "IntegerLiteral",
                                        "value": 9
                                    }
                                }
                            }
                        ],
                        "else_body": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                        "type": "IntegerLiteral",
                                        "value": 2
                                    },
                                    "operator": ">",
                                    "right_node": {
                                        "type": "IntegerLiteral",
                                        "value": 3
                                    }
                                },
                                "body": [
                                    {
                                        "type": "AssignStatement",
                                        "ident": {
                                            "type": "IdentifierLiteral",
                                            "value": "a"
                                        },
                                        "right_value": {
                                            "type": "IntegerLiteral",
                                            "value": 0
                                        }
                                    }
                                ],
                                "else_body": [
                                    {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "InfixExpression",
                                            "left_node": {
                                                "type": "IntegerLiteral",
                                                "value": 3
                                            },
                                            "operator": ">",
                                            "right_node": {
                                                "type": "IntegerLiteral",
                                                "value": 2
                                            }
                                        },
                                        "body": [
                                            {
                                                "type": "AssignStatement",
                                                "ident": {
                                                    "type": "IdentifierLiteral",
                                                    "value": "a"
                                                },
                                                "right_value": {
                                                    "type": "InfixExpression",
                                                    "left_node": {
                                                        "type": "InfixExpression",
                                                        "left_node": {
                                                            "type": "IntegerLiteral",
                                                            "value": 5
                                                        },
                                                        "operator": "+",
                                                        "right_node": {
                                                            "type": "IntegerLiteral",
                                                            "value": 5
                                                        }
                                                    },
                                                    "operator": "*",
                                                    "right_node": {
                                                        "type": "IntegerLiteral",
                                                        "value": 9
                                                    }
                                                }
                                            }
                                        ],
                                        "else_body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expr": {
                                                    "type": "InfixExpression",
                                                    "left_node": {
                                                        "type": "IntegerLiteral",
                                                        "value": 10
                                                    },
                                                    "operator": "/",
                                                    "right_node": {
                                                        "type": "IntegerLiteral",
                                                        "value": 2
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "ReturnStatement",
                        "return_value": {
                            "type": "IdentifierLiteral",
                            "value": "a"
                        }
                    }
                ]
            }
        },
        {
            "FunctionStatement": {
                "type": "FunctionStatement",
                "name": {
                    "type": "IdentifierLiteral",
                    "value": "test"
                },
                "return_type": "int",
                "parameters": [],
                "body": [
                    {
                        "type": "ReturnStatement",
                        "return_value": {
                            "type": "CallExpression",
                            "function": {
                                "type": "IdentifierLiteral",
                                "value": "func"
                            },
                            "args": []
                        }
                    }
                ]
            }
        },
        {
            "ExpressionStatement": {
                "type": "ExpressionStatement",
                "expr": {
                    "type": "CallExpression",
                    "function": {
                        "type": "IdentifierLiteral",
                        "value": "test"
                    },
                    "args": []
                }
            }
        }
    ]
}